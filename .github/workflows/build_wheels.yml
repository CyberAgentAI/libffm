name: Build wheel and sdist packages

on:
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # skip windows-2019,
        os: [ubuntu-20.04, macos-12]

    steps:
      - uses: actions/checkout@v2

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.1
        env:
          CIBW_SKIP: cp36-* cp310-* pp*
          CIBW_BEFORE_BUILD: pip install numpy Cython==3.0a9

      - name: Upload wheel packages to a GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export TAG_NAME=$(jq --raw-output .release.tag_name "$GITHUB_EVENT_PATH")
          gh release upload $TAG_NAME ./wheelhouse/*.whl

  build_wheels_macos_arm64:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # skip windows-2019,
        os: [macos-12]

    steps:
      - uses: actions/checkout@v2

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2
      #   with:
      #     platforms: linux/arm64

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.4
        env:
          CIBW_SKIP: cp36-* cp37-* cp311-* pp*
          CIBW_ARCHS_MACOS: "arm64"
          CIBW_BEFORE_BUILD: pip install numpy Cython==3.0a9 && /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" && brew install gcc@12 && ln -s /opt/homebrew/bin/gcc-12 /usr/local/bin/gcc && ln -s /opt/homebrew/bin/g++-12 /usr/local/bin/g++ && echo $(gcc -v) && export PATH="/usr/local/bin:$PATH" && echo $(which gcc) && echo $(uname -a) && echo $(uname -m)
          CXX: /opt/homebrew/bin/g++-12

      - name: Upload wheel packages to a GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export TAG_NAME=$(jq --raw-output .release.tag_name "$GITHUB_EVENT_PATH")
          gh release upload $TAG_NAME ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: pip install numpy Cython==3.0a9

      - name: Build sdist
        run: python setup.py sdist

      - name: Upload a sdist package to a GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export TAG_NAME=$(jq --raw-output .release.tag_name "$GITHUB_EVENT_PATH")
          gh release upload $TAG_NAME ./dist/*.tar.gz
